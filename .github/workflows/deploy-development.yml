name: Deploy to development

on:
  push:
    branches: [develop, feature/*]

jobs:
  build:
    environment: build-development
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    outputs:
      regions-matrix: ${{ steps.regions.outputs.matrix }}
      image: ${{ steps.build.outputs.image }}
      image-migration: ${{ steps.build.outputs.image-migration }}

    steps:
      - uses: actions/checkout@v4

      - name: 'Write .env'
        uses: './.github/workflows/_write-env'
        with:
          vars: ${{ toJson(vars) }}
          secrets: ${{ toJson(secrets) }}

      - name: 'Build and push Docker Container'
        id: build
        uses: './.github/workflows/_build-container'
        with:
          environment: 'development'
          gcp-project-id: ${{ vars.GCP_PROJECT_ID }}
          gcp-service-account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
          gcp-workload-identity-provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          gar-location: ${{ vars.GAR_LOCATION }}
          gar-repository: ${{ vars.GAR_REPOSITORY }}
          mongodb-atlas-public-api-key: ${{ vars.MONGODB_ATLAS_PUBLIC_API_KEY }}
          mongodb-atlas-private-api-key: ${{ secrets.MONGODB_ATLAS_PRIVATE_API_KEY }}
          mongodb-atlas-org-id: ${{ vars.MONGODB_ATLAS_ORG_ID }}
          mongodb-atlas-project-id: ${{ vars.MONGODB_ATLAS_PROJECT_ID }}

      - name: 'Set regions matrix'
        id: regions
        shell: bash
        run: |-
          echo "matrix=$(echo '${{ vars.GCP_REGIONS }}' | jq '{region: .[]}' | jq -s -c '{include: .}')" >> $GITHUB_OUTPUT

  deploy:
    needs: build
    environment: development
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.build.outputs.regions-matrix) }}

    steps:
      - uses: actions/checkout@v4

      - name: 'Deploy Docker Container to Google Cloud Run'
        id: deploy
        uses: './.github/workflows/_deploy-container'
        with:
          gcp-project-id: ${{ vars.GCP_PROJECT_ID }}
          gcp-service-account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
          gcp-workload-identity-provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          gar-location: ${{ vars.GAR_LOCATION }}
          image: ${{ needs.build.outputs.image }}
          image-migration: ${{ needs.build.outputs.image-migration }}
          service: ${{ vars.GCP_SERVICE }}
          region: ${{ matrix.region }}
